{"version":3,"sources":["components/note.js","components/category.js","components/subcategory.js","components/productline.js","data/products_data.js","components/navigation.js","components/testStuff.js","App.js","serviceWorker.js","index.js"],"names":["StyledNote","styled","div","Note","props","note","className","StyledH1","h1","StyledCategoryNote","CategoryNote","Category","category","name","children","SubCategoryNote","SubCategory","subcategory","StyledProductLine","isFavorite","StyledProductNote","StyledProductSize","span","StyledProductPrice","ProductNote","ProductLine","product","size","price","toFixed","PRODUCTS_DATA","subcategories","products","id","StyledNav","StyledLink","a","Navigation","href","StyledBackground","StyledButton","button","openOrClose","x","document","getElementById","style","display","innerText","TestStuff","useState","isOpen","setIsOpen","counter","setCounter","onClick","StyledContainer","App","favorites","setFavorites","map","c","key","s","p","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5819cb6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledNote = styled.div`\r\n  color: #a21212;\r\n  font-size: smaller;\r\n`;\r\n\r\n/** @return {null} */\r\nexport function Note(props) {\r\n    const {note, className} = props;\r\n    if (!note) return null;\r\n    return <StyledNote className={className}>{note}</StyledNote>\r\n}","import React from \"react\";\r\nimport {Note} from \"./note\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledH1 = styled.h1`\r\n  border-top: solid thin;\r\n  padding-top: 16px;\r\n`;\r\n\r\nconst StyledCategoryNote = styled(Note)`\r\n  padding: 0 0 0.5em 0;\r\n  background-color: red;\r\n`;\r\n\r\nfunction CategoryNote(props) {\r\n    return <StyledCategoryNote note={props.note} className={\"categoryNote\"}/>;\r\n}\r\n\r\nexport function Category(props) {\r\n    const {category} = props;\r\n    return <div>\r\n        <StyledH1>{category.name}</StyledH1>\r\n        <CategoryNote note={category.note}/>\r\n        {props.children}\r\n    </div>;\r\n}","import React from \"react\";\r\nimport {Note} from \"./note\";\r\n\r\nfunction SubCategoryNote(props) {\r\n    return <Note note={props.note} className={\"categoryNote\"}/>;\r\n}\r\n\r\nexport function SubCategory(props) {\r\n    const {subcategory} = props;\r\n    return <div>\r\n        <h2>{subcategory.name}</h2>\r\n        <SubCategoryNote note={subcategory.note}/>\r\n        {props.children}\r\n    </div>;\r\n}","import React from \"react\";\r\nimport {Note} from \"./note\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledProductLine = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: ${(props) => props.isFavorite ? \"red\" : \"black\"};\r\n  & div{\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst StyledProductNote = styled(Note)`\r\n  padding: 0 1.5em 0.5em 0;\r\n`;\r\n\r\nconst StyledProductSize = styled.span`\r\n  font-size: 0.6em;\r\n`;\r\n\r\nconst StyledProductPrice = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nfunction ProductNote(props) {\r\n    return <StyledProductNote note={props.note} className={\"productNote\"}/>;\r\n}\r\n\r\nexport function ProductLine(props) {\r\n    const {product, isFavorite} = props;\r\n    return <>\r\n        <StyledProductLine isFavorite={isFavorite}>\r\n            <div>\r\n                {product.name}\r\n                {product.size && <StyledProductSize className=\"productSize\">  â€¢ {product.size}CL</StyledProductSize>}\r\n            </div>\r\n            <StyledProductPrice>{product.price.toFixed(2)}&euro;</StyledProductPrice>\r\n        </StyledProductLine>\r\n        <ProductNote note={product.note}/>\r\n    </>;\r\n}","export const PRODUCTS_DATA = [\r\n    {\r\n        name: \"drank\",\r\n        subcategories: [\r\n            {\r\n                name: \"fris\",\r\n                products: [\r\n                    {id: \"cola\",name: \"cola\", price: 2},\r\n                    {id: \"water\", name: \"water\", price: 2},\r\n                ],\r\n            },\r\n            {\r\n                name: \"alcohol\",\r\n                products: [\r\n                    {id: \"bier klein\",name: \"bier\", price: 2, size: 25},\r\n                    {id: \"bier groot\",name: \"bier\", price: 2.4, size: 33},\r\n                    {id: \"wijn\",name: \"wijn\", price: 4}\r\n                ],\r\n            }]\r\n    },\r\n    {\r\n        name: \"eten\",\r\n        note: \"voor de snelle honger\",\r\n        subcategories: [\r\n            {\r\n                name: \"hapjes\",\r\n                note: \"deze kan je altijd bestellen\",\r\n                products: [\r\n                    {id: \"chips\",name: \"chips\", price: 1, note: \"paprika of zout\"},\r\n                    {id: \"olijven\",name: \"olijven\", price: 2, note: \"mix zwart en groen\"},\r\n                    {id: \"kaas\",name: \"kaas\", price: 4, note: \"mix jonge en oude blokjes\"},\r\n                    {id: \"salami\",name: \"salami\", price: 3},\r\n                ]\r\n            },\r\n            {\r\n                name: \"warm\",\r\n                note: \"niet na 22:00\",\r\n                products: [\r\n                    {id: \"hamburger\",name: \"hamburger\", price: 4},\r\n                    {id: \"pizza\",name: \"pizza\", price: 4}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledNav = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  padding: 1em 0 1em 0;\r\n  background-color: black;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: white;\r\n  text-decoration: none;\r\n    :hover{\r\n    color: rgb(162,18,18);\r\n  }\r\n`;\r\n\r\nexport function Navigation() {\r\n    return <div>\r\n        <StyledNav>\r\n            <StyledLink href=\"#top\">Menu</StyledLink>\r\n        </StyledNav>\r\n    </div>;\r\n}","import React, {useState} from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledBackground = styled.div`\r\n  background-color: darkgray;\r\n  text-align: center;\r\n  padding-top: 2%;\r\n  padding-bottom: 2%;\r\n`;\r\nconst StyledButton = styled.button`\r\n  width: 10%;\r\n  margin-left: 45%;\r\n  margin-right: 45%;\r\n  padding-top: 1%;\r\n  padding-bottom: 1%;\r\n`;\r\n\r\nfunction openOrClose() {\r\n    let x = document.getElementById(\"buttonDiv\");\r\n    if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n        document.getElementById('openOrCloseButton').innerText = 'Close';\r\n    } else {\r\n        x.style.display = \"none\";\r\n        document.getElementById('openOrCloseButton').innerText = 'testStuff';\r\n    }\r\n}\r\nexport function TestStuff() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [counter, setCounter] = useState(0);\r\n    return <div><StyledButton id={\"openOrCloseButton\"} onClick={openOrClose}>Close</StyledButton>\r\n    <StyledBackground id={\"buttonDiv\"}>\r\n        <button onClick={() => setIsOpen(!isOpen)}>click</button>\r\n        <div>{isOpen ? \"open\" : \"toe\"}</div>\r\n        <button onClick={() => setCounter(counter+1)}>increment</button>\r\n        <button onClick={() => setCounter(counter-1)}>decrement</button>\r\n        <div>{counter}</div>\r\n    </StyledBackground></div>;\r\n}","import React, {useState} from 'react';\r\nimport 'normalize.css';\r\nimport './App.css';\r\nimport {Category} from \"./components/category\";\r\nimport {SubCategory} from \"./components/subcategory\";\r\nimport {ProductLine} from \"./components/productline\";\r\nimport {PRODUCTS_DATA} from \"./data/products_data\";\r\nimport {Navigation} from \"./components/navigation\";\r\nimport styled from \"@emotion/styled\";\r\nimport {TestStuff} from \"./components/testStuff\";\r\n\r\nconst StyledContainer = styled.div`\r\n  margin-left: 3vw;\r\n  margin-right: 2vw;\r\n  padding-top: 3%;\r\n  padding-bottom: 3%;\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n  padding-top: 20px;\r\n`;\r\n\r\nfunction App() {\r\n    const [favorites, setFavorites] = useState([]);\r\n    // let newFavorites = [];\r\n    /*function toggleProductIsFavorite(product){\r\n        if(favorites.includes(product)){\r\n            newFavorites = favorites.filter(product => favorites.includes(product));\r\n        }\r\n        else{\r\n            newFavorites = [...favorites, product]\r\n        }\r\n        return newFavorites;\r\n    }*/\r\n    function isFavorite(product){\r\n        if(favorites.includes(product)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Navigation/>\r\n            <StyledContainer>\r\n                <StyledH1>Menu</StyledH1>\r\n                <button onClick={() => setFavorites([PRODUCTS_DATA[0].subcategories[0].products[0]])}>favorite</button>\r\n                {/*<button onClick={() => toggleProductIsFavorite([PRODUCTS_DATA[0].subcategories[0].products[0]])}>favorite2</button>*/}\r\n                {PRODUCTS_DATA.map((c) =>\r\n                    <Category key={c.name} category={c}>\r\n                        {c.subcategories.map((s) =>\r\n                            <SubCategory key={s.name} subcategory={s}>\r\n                                {s.products.map((p) =>\r\n                                    <ProductLine isFavorite={isFavorite(p)} key={p.id} product={p}/>)}\r\n                            </SubCategory>)}\r\n                    </Category>)}\r\n            </StyledContainer>\r\n            <TestStuff/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}